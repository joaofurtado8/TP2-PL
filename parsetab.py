
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftoulefteleft<>left+-left*/cosFim Inicio ate atribui caracter cos de e ellipsis entao escreva falso fim_se inteiro leia logico nao nr ou para real se sen senao string var verdadeiro axioma : Inicio code Fim code : S code : code ';' S S : C condicao : se E entao c_list senao c_list fim_se  C : E\n              | condicao C : escreva '(' e_list ')' ';'C : leia '(' var ')' ';' C : var atribui E ';'  C : para var de E ate E  '{' c_list '}'  e_list : E\n                   | e_list ',' E  c_list : C\n                     | c_list ';' C N : nr N : E '+' E\n             | E '-' E\n             | E '*' E\n             | E '/' E\n             | E '<' E\n             | E '>' EN : cos '(' E ')'N : sen '(' E ')'B : FB : E e E\n             | E ou E F : verdadeiro  F : falso  F : nao F\n              | nao var  E : var  E : '(' E ')'  E : B\n              | N\n              | string  E : var '(' e_list ')'\n              | var '(' ')'  args :\n                 | var_list  var_list : var\n                     | var_list ',' var  arg_list : E\n                     | arg_list ',' E "
    
_lr_action_items = {'Inicio':([0,],[2,]),'$end':([1,24,],[0,-1,]),'escreva':([2,25,63,80,81,85,],[8,8,8,8,8,8,]),'leia':([2,25,63,80,81,85,],[10,10,10,10,10,10,]),'var':([2,9,12,16,23,25,26,27,28,29,30,31,32,33,34,37,38,39,42,43,62,63,67,79,80,81,85,],[11,36,40,36,45,11,36,36,36,36,36,36,36,36,36,58,36,36,36,36,36,11,36,36,11,11,11,]),'para':([2,25,63,80,81,85,],[12,12,12,12,12,12,]),'(':([2,8,9,10,11,16,19,20,25,26,27,28,29,30,31,32,33,34,36,38,39,42,43,62,63,67,79,80,81,85,],[9,34,9,37,39,9,42,43,9,9,9,9,9,9,9,9,9,9,39,9,9,9,9,9,9,9,9,9,9,9,]),'string':([2,9,16,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'se':([2,25,63,80,81,85,],[16,16,16,16,16,16,]),'nr':([2,9,16,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'cos':([2,9,16,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'sen':([2,9,16,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'verdadeiro':([2,9,16,23,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'falso':([2,9,16,23,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'nao':([2,9,16,23,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'Fim':([3,4,5,6,7,11,13,14,15,17,18,21,22,36,44,45,46,47,48,49,50,51,52,53,54,57,61,69,70,74,75,76,78,86,88,],[24,-2,-4,-6,-7,-32,-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-3,-26,-27,-17,-18,-19,-20,-21,-22,-33,-38,-10,-37,-23,-24,-8,-9,-5,-11,]),';':([3,4,5,6,7,11,13,14,15,17,18,21,22,36,44,45,46,47,48,49,50,51,52,53,54,57,59,61,66,68,69,70,72,73,74,75,76,78,83,84,86,87,88,],[25,-2,-4,-6,-7,-32,-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-3,-26,-27,-17,-18,-19,-20,-21,-22,-33,69,-38,76,78,-10,-37,81,-14,-23,-24,-8,-9,81,-15,-5,81,-11,]),'senao':([6,7,11,13,14,15,17,18,21,22,36,44,45,47,48,49,50,51,52,53,54,57,61,69,70,72,73,74,75,76,78,84,86,88,],[-6,-7,-32,-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,-33,-38,-10,-37,80,-14,-23,-24,-8,-9,-15,-5,-11,]),'fim_se':([6,7,11,13,14,15,17,18,21,22,36,44,45,47,48,49,50,51,52,53,54,57,61,69,70,73,74,75,76,78,83,84,86,88,],[-6,-7,-32,-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,-33,-38,-10,-37,-14,-23,-24,-8,-9,86,-15,-5,-11,]),'}':([6,7,11,13,14,15,17,18,21,22,36,44,45,47,48,49,50,51,52,53,54,57,61,69,70,73,74,75,76,78,84,86,87,88,],[-6,-7,-32,-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,-33,-38,-10,-37,-14,-23,-24,-8,-9,-15,-5,88,-11,]),'e':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[26,-32,-34,-35,-36,-25,-16,-28,-29,26,-32,26,-30,-31,-26,26,-17,-18,-19,-20,-21,-22,26,-33,26,-38,26,26,-37,26,-23,-24,26,26,]),'ou':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[27,-32,-34,-35,-36,-25,-16,-28,-29,27,-32,27,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,27,-33,27,-38,27,27,-37,27,-23,-24,27,27,]),'+':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[28,-32,-34,-35,-36,-25,-16,-28,-29,28,-32,28,-30,-31,28,28,-17,-18,-19,-20,28,28,28,-33,28,-38,28,28,-37,28,-23,-24,28,28,]),'-':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[29,-32,-34,-35,-36,-25,-16,-28,-29,29,-32,29,-30,-31,29,29,-17,-18,-19,-20,29,29,29,-33,29,-38,29,29,-37,29,-23,-24,29,29,]),'*':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[30,-32,-34,-35,-36,-25,-16,-28,-29,30,-32,30,-30,-31,30,30,30,30,-19,-20,30,30,30,-33,30,-38,30,30,-37,30,-23,-24,30,30,]),'/':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[31,-32,-34,-35,-36,-25,-16,-28,-29,31,-32,31,-30,-31,31,31,31,31,-19,-20,31,31,31,-33,31,-38,31,31,-37,31,-23,-24,31,31,]),'<':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[32,-32,-34,-35,-36,-25,-16,-28,-29,32,-32,32,-30,-31,32,32,-17,-18,-19,-20,-21,-22,32,-33,32,-38,32,32,-37,32,-23,-24,32,32,]),'>':([6,11,13,14,15,17,18,21,22,35,36,41,44,45,47,48,49,50,51,52,53,54,56,57,59,61,64,65,70,71,74,75,77,82,],[33,-32,-34,-35,-36,-25,-16,-28,-29,33,-32,33,-30,-31,33,33,-17,-18,-19,-20,-21,-22,33,-33,33,-38,33,33,-37,33,-23,-24,33,33,]),'atribui':([11,],[38,]),')':([13,14,15,17,18,21,22,35,36,39,44,45,47,48,49,50,51,52,53,54,55,56,57,58,60,61,64,65,70,74,75,77,],[-34,-35,-36,-25,-16,-28,-29,57,-32,61,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,66,-12,-33,68,70,-38,74,75,-37,-23,-24,-13,]),'entao':([13,14,15,17,18,21,22,36,41,44,45,47,48,49,50,51,52,53,54,57,61,70,74,75,],[-34,-35,-36,-25,-16,-28,-29,-32,63,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,-33,-38,-37,-23,-24,]),',':([13,14,15,17,18,21,22,36,44,45,47,48,49,50,51,52,53,54,55,56,57,60,61,70,74,75,77,],[-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,67,-12,-33,67,-38,-37,-23,-24,-13,]),'ate':([13,14,15,17,18,21,22,36,44,45,47,48,49,50,51,52,53,54,57,61,70,71,74,75,],[-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,-33,-38,-37,79,-23,-24,]),'{':([13,14,15,17,18,21,22,36,44,45,47,48,49,50,51,52,53,54,57,61,70,74,75,82,],[-34,-35,-36,-25,-16,-28,-29,-32,-30,-31,-26,-27,-17,-18,-19,-20,-21,-22,-33,-38,-37,-23,-24,85,]),'de':([40,],[62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'axioma':([0,],[1,]),'code':([2,],[3,]),'S':([2,25,],[4,46,]),'C':([2,25,63,80,81,85,],[5,5,73,73,84,73,]),'E':([2,9,16,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[6,35,41,6,47,48,49,50,51,52,53,54,56,59,56,64,65,71,6,77,82,6,6,6,]),'condicao':([2,25,63,80,81,85,],[7,7,7,7,7,7,]),'B':([2,9,16,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'N':([2,9,16,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'F':([2,9,16,23,25,26,27,28,29,30,31,32,33,34,38,39,42,43,62,63,67,79,80,81,85,],[17,17,17,44,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'e_list':([34,39,],[55,60,]),'c_list':([63,80,85,],[72,83,87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> axioma","S'",1,None,None,None),
  ('axioma -> Inicio code Fim','axioma',3,'p_axioma0','logic_grammar.py',27),
  ('code -> S','code',1,'p_code0','logic_grammar.py',31),
  ('code -> code ; S','code',3,'p_code1','logic_grammar.py',35),
  ('S -> C','S',1,'p_s','logic_grammar.py',40),
  ('condicao -> se E entao c_list senao c_list fim_se','condicao',7,'p_condicao','logic_grammar.py',44),
  ('C -> E','C',1,'p_c0','logic_grammar.py',52),
  ('C -> condicao','C',1,'p_c0','logic_grammar.py',53),
  ('C -> escreva ( e_list ) ;','C',5,'p_c1','logic_grammar.py',57),
  ('C -> leia ( var ) ;','C',5,'p_c2','logic_grammar.py',61),
  ('C -> var atribui E ;','C',4,'p_c3','logic_grammar.py',65),
  ('C -> para var de E ate E { c_list }','C',9,'p_c4','logic_grammar.py',69),
  ('e_list -> E','e_list',1,'p_e_list','logic_grammar.py',77),
  ('e_list -> e_list , E','e_list',3,'p_e_list','logic_grammar.py',78),
  ('c_list -> C','c_list',1,'p_c_list','logic_grammar.py',85),
  ('c_list -> c_list ; C','c_list',3,'p_c_list','logic_grammar.py',86),
  ('N -> nr','N',1,'p_n1','logic_grammar.py',94),
  ('N -> E + E','N',3,'p_n2','logic_grammar.py',98),
  ('N -> E - E','N',3,'p_n2','logic_grammar.py',99),
  ('N -> E * E','N',3,'p_n2','logic_grammar.py',100),
  ('N -> E / E','N',3,'p_n2','logic_grammar.py',101),
  ('N -> E < E','N',3,'p_n2','logic_grammar.py',102),
  ('N -> E > E','N',3,'p_n2','logic_grammar.py',103),
  ('N -> cos ( E )','N',4,'p_n3','logic_grammar.py',107),
  ('N -> sen ( E )','N',4,'p_n4','logic_grammar.py',111),
  ('B -> F','B',1,'p_b0','logic_grammar.py',115),
  ('B -> E e E','B',3,'p_b1','logic_grammar.py',119),
  ('B -> E ou E','B',3,'p_b1','logic_grammar.py',120),
  ('F -> verdadeiro','F',1,'p_f1','logic_grammar.py',124),
  ('F -> falso','F',1,'p_f2','logic_grammar.py',128),
  ('F -> nao F','F',2,'p_f3','logic_grammar.py',132),
  ('F -> nao var','F',2,'p_f3','logic_grammar.py',133),
  ('E -> var','E',1,'p_e1','logic_grammar.py',137),
  ('E -> ( E )','E',3,'p_e2','logic_grammar.py',141),
  ('E -> B','E',1,'p_e3','logic_grammar.py',145),
  ('E -> N','E',1,'p_e3','logic_grammar.py',146),
  ('E -> string','E',1,'p_e3','logic_grammar.py',147),
  ('E -> var ( e_list )','E',4,'p_e4','logic_grammar.py',151),
  ('E -> var ( )','E',3,'p_e4','logic_grammar.py',152),
  ('args -> <empty>','args',0,'p_args','logic_grammar.py',159),
  ('args -> var_list','args',1,'p_args','logic_grammar.py',160),
  ('var_list -> var','var_list',1,'p_var_list','logic_grammar.py',164),
  ('var_list -> var_list , var','var_list',3,'p_var_list','logic_grammar.py',165),
  ('arg_list -> E','arg_list',1,'p_arg_list','logic_grammar.py',173),
  ('arg_list -> arg_list , E','arg_list',3,'p_arg_list','logic_grammar.py',174),
]
