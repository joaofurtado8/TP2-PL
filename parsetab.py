
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftoulefteleft<>left+-left*/cosFim Inicio ate atribui caracter cos de e ellipsis entao escreva falso fim_para fim_se fun inteiro leia logico nao nr ou para real se sen senao string var verdadeiro axioma : Inicio code Fim code : S code : code ';' S S : C\n             | E\n             | A\n             | condicao condicao : se E entao c_list senao c_list fim_se C : escreva '(' e_list ')' ';'C : leia '(' var ')' ';' C : para var de E ate E  '{' c_list '}' fim_para  A : fun var '(' args ')' '{' code '}'  A : var atribui E ';'  e_list : E\n                   | e_list ',' E  c_list : C\n                     | c_list ';' C N : nr N : E '+' E\n             | E '-' E\n             | E '*' E\n             | E '/' E\n             | E '<' E\n             | E '>' EN : cos '(' E ')'N : sen '(' E ')'B : FB : E e E\n             | E ou E F : verdadeiro  F : falso  F : nao F\n              | nao var  E : var  E : '(' E ')'  E : B\n              | N\n              | string  E : var '(' arg_list ')'\n              | var '(' ')'  E : var '(' var_list ')' args :\n                 | var_list  var_list : var\n                     | var_list ',' var  arg_list : E\n                     | arg_list ',' E "
    
_lr_action_items = {'Inicio':([0,],[2,]),'$end':([1,26,],[0,-1,]),'escreva':([2,27,70,96,97,99,102,],[9,9,9,9,9,9,9,]),'leia':([2,27,70,96,97,99,102,],[11,11,11,11,11,11,11,]),'para':([2,27,70,96,97,99,102,],[13,13,13,13,13,13,13,]),'var':([2,10,13,17,18,25,27,28,29,30,31,32,33,34,35,36,39,40,41,45,46,68,69,74,77,79,94,99,],[12,38,42,43,38,48,12,38,38,38,38,38,38,38,38,38,61,62,38,38,38,38,82,38,38,93,38,12,]),'(':([2,9,10,11,12,18,21,22,27,28,29,30,31,32,33,34,35,36,38,40,41,43,45,46,62,68,74,77,94,99,],[10,36,10,39,40,10,45,46,10,10,10,10,10,10,10,10,10,10,40,10,10,69,10,10,40,10,10,10,10,10,]),'string':([2,10,18,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'fun':([2,27,99,],[17,17,17,]),'se':([2,27,99,],[18,18,18,]),'nr':([2,10,18,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'cos':([2,10,18,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'sen':([2,10,18,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'verdadeiro':([2,10,18,25,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'falso':([2,10,18,25,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'nao':([2,10,18,25,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'Fim':([3,4,5,6,7,8,12,14,15,16,19,20,23,24,38,47,48,49,50,51,52,53,54,55,56,57,60,64,76,78,80,87,88,89,91,104,106,108,],[26,-2,-4,-5,-6,-7,-34,-36,-37,-38,-27,-18,-30,-31,-34,-32,-33,-3,-28,-29,-19,-20,-21,-22,-23,-24,-35,-40,-39,-41,-13,-25,-26,-9,-10,-8,-12,-11,]),';':([3,4,5,6,7,8,12,14,15,16,19,20,23,24,38,47,48,49,50,51,52,53,54,55,56,57,60,64,67,73,75,76,78,80,85,86,87,88,89,91,100,101,103,104,105,106,108,],[27,-2,-4,-5,-6,-7,-34,-36,-37,-38,-27,-18,-30,-31,-34,-32,-33,-3,-28,-29,-19,-20,-21,-22,-23,-24,-35,-40,80,89,91,-39,-41,-13,97,-16,-25,-26,-9,-10,97,-17,27,-8,97,-12,-11,]),'}':([4,5,6,7,8,12,14,15,16,19,20,23,24,38,47,48,49,50,51,52,53,54,55,56,57,60,64,76,78,80,86,87,88,89,91,101,103,104,105,106,108,],[-2,-4,-5,-6,-7,-34,-36,-37,-38,-27,-18,-30,-31,-34,-32,-33,-3,-28,-29,-19,-20,-21,-22,-23,-24,-35,-40,-39,-41,-13,-16,-25,-26,-9,-10,-17,106,-8,107,-12,-11,]),'e':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[28,-34,-36,-37,-38,-27,-18,-30,-31,28,-34,28,-32,-33,-28,28,-19,-20,-21,-22,-23,-24,28,-35,-34,-40,28,28,28,28,-39,-41,28,-25,-26,28,28,28,]),'ou':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[29,-34,-36,-37,-38,-27,-18,-30,-31,29,-34,29,-32,-33,-28,-29,-19,-20,-21,-22,-23,-24,29,-35,-34,-40,29,29,29,29,-39,-41,29,-25,-26,29,29,29,]),'+':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[30,-34,-36,-37,-38,-27,-18,-30,-31,30,-34,30,-32,-33,30,30,-19,-20,-21,-22,30,30,30,-35,-34,-40,30,30,30,30,-39,-41,30,-25,-26,30,30,30,]),'-':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[31,-34,-36,-37,-38,-27,-18,-30,-31,31,-34,31,-32,-33,31,31,-19,-20,-21,-22,31,31,31,-35,-34,-40,31,31,31,31,-39,-41,31,-25,-26,31,31,31,]),'*':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[32,-34,-36,-37,-38,-27,-18,-30,-31,32,-34,32,-32,-33,32,32,32,32,-21,-22,32,32,32,-35,-34,-40,32,32,32,32,-39,-41,32,-25,-26,32,32,32,]),'/':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[33,-34,-36,-37,-38,-27,-18,-30,-31,33,-34,33,-32,-33,33,33,33,33,-21,-22,33,33,33,-35,-34,-40,33,33,33,33,-39,-41,33,-25,-26,33,33,33,]),'<':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[34,-34,-36,-37,-38,-27,-18,-30,-31,34,-34,34,-32,-33,34,34,-19,-20,-21,-22,-23,-24,34,-35,-34,-40,34,34,34,34,-39,-41,34,-25,-26,34,34,34,]),'>':([6,12,14,15,16,19,20,23,24,37,38,44,47,48,50,51,52,53,54,55,56,57,59,60,62,64,66,67,71,72,76,78,81,87,88,90,92,98,],[35,-34,-36,-37,-38,-27,-18,-30,-31,35,-34,35,-32,-33,35,35,-19,-20,-21,-22,-23,-24,35,-35,-34,-40,35,35,35,35,-39,-41,35,-25,-26,35,35,35,]),'atribui':([12,],[41,]),')':([14,15,16,19,20,23,24,37,38,40,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,71,72,76,78,82,83,84,87,88,90,92,93,],[-36,-37,-38,-27,-18,-30,-31,60,-34,64,-32,-33,-28,-29,-19,-20,-21,-22,-23,-24,73,-14,-35,75,-34,76,-40,78,-46,-42,87,88,-39,-41,-44,95,-43,-25,-26,-15,-47,-45,]),'entao':([14,15,16,19,20,23,24,38,44,47,48,50,51,52,53,54,55,56,57,60,64,76,78,87,88,],[-36,-37,-38,-27,-18,-30,-31,-34,70,-32,-33,-28,-29,-19,-20,-21,-22,-23,-24,-35,-40,-39,-41,-25,-26,]),',':([14,15,16,19,20,23,24,38,47,48,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,76,78,82,84,87,88,90,92,93,],[-36,-37,-38,-27,-18,-30,-31,-34,-32,-33,-28,-29,-19,-20,-21,-22,-23,-24,74,-14,-35,-34,77,-40,79,-46,-39,-41,-44,79,-25,-26,-15,-47,-45,]),'ate':([14,15,16,19,20,23,24,38,47,48,50,51,52,53,54,55,56,57,60,64,76,78,81,87,88,],[-36,-37,-38,-27,-18,-30,-31,-34,-32,-33,-28,-29,-19,-20,-21,-22,-23,-24,-35,-40,-39,-41,94,-25,-26,]),'{':([14,15,16,19,20,23,24,38,47,48,50,51,52,53,54,55,56,57,60,64,76,78,87,88,95,98,],[-36,-37,-38,-27,-18,-30,-31,-34,-32,-33,-28,-29,-19,-20,-21,-22,-23,-24,-35,-40,-39,-41,-25,-26,99,102,]),'de':([42,],[68,]),'senao':([85,86,89,91,101,108,],[96,-16,-9,-10,-17,-11,]),'fim_se':([86,89,91,100,101,108,],[-16,-9,-10,104,-17,-11,]),'fim_para':([107,],[108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'axioma':([0,],[1,]),'code':([2,99,],[3,103,]),'S':([2,27,99,],[4,49,4,]),'C':([2,27,70,96,97,99,102,],[5,5,86,86,101,5,86,]),'E':([2,10,18,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[6,37,44,6,50,51,52,53,54,55,56,57,59,66,67,71,72,81,90,92,98,6,]),'A':([2,27,99,],[7,7,7,]),'condicao':([2,27,99,],[8,8,8,]),'B':([2,10,18,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'N':([2,10,18,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'F':([2,10,18,25,27,28,29,30,31,32,33,34,35,36,40,41,45,46,68,74,77,94,99,],[19,19,19,47,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'e_list':([36,],[58,]),'arg_list':([40,],[63,]),'var_list':([40,69,],[65,84,]),'args':([69,],[83,]),'c_list':([70,96,102,],[85,100,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> axioma","S'",1,None,None,None),
  ('axioma -> Inicio code Fim','axioma',3,'p_axioma0','logic_grammar.py',27),
  ('code -> S','code',1,'p_code0','logic_grammar.py',31),
  ('code -> code ; S','code',3,'p_code1','logic_grammar.py',35),
  ('S -> C','S',1,'p_s','logic_grammar.py',40),
  ('S -> E','S',1,'p_s','logic_grammar.py',41),
  ('S -> A','S',1,'p_s','logic_grammar.py',42),
  ('S -> condicao','S',1,'p_s','logic_grammar.py',43),
  ('condicao -> se E entao c_list senao c_list fim_se','condicao',7,'p_condicao','logic_grammar.py',47),
  ('C -> escreva ( e_list ) ;','C',5,'p_c1','logic_grammar.py',55),
  ('C -> leia ( var ) ;','C',5,'p_c2','logic_grammar.py',59),
  ('C -> para var de E ate E { c_list } fim_para','C',10,'p_c4','logic_grammar.py',63),
  ('A -> fun var ( args ) { code }','A',8,'p_a0','logic_grammar.py',71),
  ('A -> var atribui E ;','A',4,'p_a1','logic_grammar.py',75),
  ('e_list -> E','e_list',1,'p_e_list','logic_grammar.py',79),
  ('e_list -> e_list , E','e_list',3,'p_e_list','logic_grammar.py',80),
  ('c_list -> C','c_list',1,'p_c_list','logic_grammar.py',87),
  ('c_list -> c_list ; C','c_list',3,'p_c_list','logic_grammar.py',88),
  ('N -> nr','N',1,'p_n1','logic_grammar.py',96),
  ('N -> E + E','N',3,'p_n2','logic_grammar.py',100),
  ('N -> E - E','N',3,'p_n2','logic_grammar.py',101),
  ('N -> E * E','N',3,'p_n2','logic_grammar.py',102),
  ('N -> E / E','N',3,'p_n2','logic_grammar.py',103),
  ('N -> E < E','N',3,'p_n2','logic_grammar.py',104),
  ('N -> E > E','N',3,'p_n2','logic_grammar.py',105),
  ('N -> cos ( E )','N',4,'p_n3','logic_grammar.py',109),
  ('N -> sen ( E )','N',4,'p_n4','logic_grammar.py',113),
  ('B -> F','B',1,'p_b0','logic_grammar.py',117),
  ('B -> E e E','B',3,'p_b1','logic_grammar.py',121),
  ('B -> E ou E','B',3,'p_b1','logic_grammar.py',122),
  ('F -> verdadeiro','F',1,'p_f1','logic_grammar.py',126),
  ('F -> falso','F',1,'p_f2','logic_grammar.py',130),
  ('F -> nao F','F',2,'p_f3','logic_grammar.py',134),
  ('F -> nao var','F',2,'p_f3','logic_grammar.py',135),
  ('E -> var','E',1,'p_E1','logic_grammar.py',139),
  ('E -> ( E )','E',3,'p_E2','logic_grammar.py',143),
  ('E -> B','E',1,'p_E3','logic_grammar.py',147),
  ('E -> N','E',1,'p_E3','logic_grammar.py',148),
  ('E -> string','E',1,'p_E3','logic_grammar.py',149),
  ('E -> var ( arg_list )','E',4,'p_E4','logic_grammar.py',153),
  ('E -> var ( )','E',3,'p_E4','logic_grammar.py',154),
  ('E -> var ( var_list )','E',4,'p_E5','logic_grammar.py',159),
  ('args -> <empty>','args',0,'p_args','logic_grammar.py',166),
  ('args -> var_list','args',1,'p_args','logic_grammar.py',167),
  ('var_list -> var','var_list',1,'p_var_list','logic_grammar.py',171),
  ('var_list -> var_list , var','var_list',3,'p_var_list','logic_grammar.py',172),
  ('arg_list -> E','arg_list',1,'p_arg_list','logic_grammar.py',180),
  ('arg_list -> arg_list , E','arg_list',3,'p_arg_list','logic_grammar.py',181),
]
